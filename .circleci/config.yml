version: 2.1


contexts_defaults: &contexts_defaults
  docker: [{image: 'alpine:latest'}]
  working_directory: /a/contexts/test

workspaces_defaults: &workspaces_defaults
  docker: [{image: 'circleci/node:latest'}]
  working_directory: ~/foo/bar

jobs:
  # feature jobs
  contexts:
    <<: *contexts_defaults
    steps:
      - run: env | grep CONTEXT_END_TO_END_TEST_VAR
      - run: echo $CONTEXT_END_TO_END_TEST_VAR

  multi-contexts:
    <<: *contexts_defaults
    steps:
      - run: env | grep MULTI_CONTEXT_END_TO_END_VAR
      - run: echo $CONTEXT_END_TO_END_TEST_VAR

  write_workspace:
    <<: *workspaces_defaults
    steps:
      - run: mkdir stuff
      - run: echo 5 >./stuff/thing
      - persist_to_workspace:
          root: .
          paths:
            - stuff

  read_workspace:
    <<: *workspaces_defaults
    steps:
      - attach_workspace:
           at: ./attached
      - run: |
          if [[ $(< ./attached/stuff/thing) != '5' ]]; then
            echo 'Sadness, the value is not what we expected, so the workspace write/read did not work'
            exit 1
          else
            echo 'Yay, value matches'
            exit 0
          fi

  save_and_restore_cache:
    docker:
      - image: cimg/python:3.10
    working_directory: ~/realitycheck
    steps:
      - run: |
         ls -l ~/.ssh || mkdir -p ~/.ssh 
         chmod 700 ~/.ssh
         ls -l ~/.ssh
         cat > config \<<EOF
         Host  github.com
           User git
           ProxyCommand nc -x ${HTTP_PROXY} -Xconnect %h %p
         EOF
         chmod 600 config
         mv config ~/.ssh/config
         chmod 600 ~/.ssh
        #  git config --global http.proxy ${HTTP_PROXY}
        #  git config --global https.proxy ${HTTP_PROXY}
      - checkout
      - run: mkdir -p stuff
      - run: echo 5 >./stuff/thing

      - save_cache:
          key: v3-file-cache-{{ .BuildNum }}
          paths:
            - ./stuff/thing

      - run: rm -rf ./stuff/thing
      - run: sleep 5

      - restore_cache:
            keys:
              - v3-file-cache-{{ .BuildNum }}

      - run: |
            if [[ $(< stuff/thing) != '5' ]]; then
              exit 1
            else
              echo "The cache was populated"
            fi

  artifacts_test_results:
    docker:
      - image: cimg/python:3.10
    working_directory: ~/realitycheck
    steps:
      - run: |
         mkdir -p ~/.ssh
         cat > config \<<EOF
         Host  github.com
           User git
           ProxyCommand nc -x ${HTTP_PROXY} -Xconnect %h %p
         EOF
         chmod 600 config
         mv config ~/.ssh/config
         chmod 600 ~/.ssh    
      - checkout
      - run:
          name: Creating Dummy Artifacts
          command: |
            echo "my artifact file" > /tmp/artifact-1.txt;
            mkdir /tmp/artifacts;
            echo "my artifact files in a dir" > /tmp/artifacts/artifact-2.txt;

      - store_artifacts:
          path: /tmp/artifact-1.txt
          destination: artifact-file.txt

      - store_artifacts:
          path: /tmp/artifacts

      - store_test_results:
          path: test-results

          
## ========================================================================
##                WORKFLOW
## ========================================================================
workflows:
  version: 2
  
  feature_jobs:
    jobs:
      - save_and_restore_cache
      - contexts:
          context: atul-org-global
      - multi-contexts:
          context: atul-individual-local
      - write_workspace
      - read_workspace:
          requires:
            - write_workspace
      - artifacts_test_results
