version: 2.1

remote_docker_defaults: &remote_docker_defaults
  docker: [{image: 'docker:17.06-git'}]

include_proxy_env: &include_proxy_env
  name: "Set Proxy Env"
  command: |
    mkdir -p ~/.docker
    cat \<<EOF > ~/.docker/config.json
    {
    "proxies":
    {
      "default":
    {
      "httpProxy": "http://proxy.atul-proxy.internal:3128",
      "httpsProxy": "http://proxy.atul-proxy.internal:3128",
      "noProxy": "10.0.0.0/16,localhost,127.0.0.1,10.42.0.0/16,10.43.0.0/16,k3s.atul-proxy.internal"
    }
    }
    }
    EOF

basic_docker_build: &basic_docker_build
  name: "Build a really basic docker image"
  command: |
    hostname
    dockerfile=Dockerfile
    echo "FROM alpine:latest" > $dockerfile
    echo "RUN echo hello" >> $dockerfile
    docker network ls
    docker inspect $(docker network ls | grep -w bridge | awk '{print $1}')
    ip route
    docker build -f $dockerfile --tag throwaway:$CIRCLE_BUILD_NUM .
    docker run --rm throwaway:$CIRCLE_BUILD_NUM


jobs:
  # check if EC2
  check_if_ec2:
    machine: true
    steps:
      - run: |
          result=$(curl http://169.254.169.254/latest/meta-data/instance-type)
          if [[ $result == *"Not Found"* ]]; then exit 1; fi
    environment:
      SLEEP: 1

  # linux jobs
  medium_linux:
    machine: true
    resource_class: medium
    steps:
      - run:
          <<: *basic_docker_build
      - run: |
          echo $SLEEP
          date
          sleep $SLEEP
          date
          echo 'Done sleeping.'
    environment:
      SLEEP: 1
  
  large_linux:
    machine: true
    resource_class: large
    steps:
      - run:
          <<: *basic_docker_build
      - run: |
          echo $SLEEP
          date
          sleep $SLEEP
          date
          echo 'Done sleeping.'
    environment:
      SLEEP: 1

  xlarge_linux:
    machine: true
    resource_class: xlarge
    steps:
      - run:
          <<: *basic_docker_build
      - run: |
          echo $SLEEP
          date
          sleep $SLEEP
          date
          echo 'Done sleeping.'
    environment:
      SLEEP: 1

  large2x_linux:
    machine: true
    resource_class: 2xlarge
    steps:
      - run:
          <<: *basic_docker_build
      - run: |
          echo $SLEEP
          date
          sleep $SLEEP
          date
          echo 'Done sleeping.'
    environment:
      SLEEP: 1

  # windows jobs
  medium_windows:
    machine:
      image: windows-default
    resource_class: windows.medium
    steps:
      - checkout
      - run: systeminfo

  large_windows:
    machine:
      image: windows-default
    resource_class: windows.large
    steps:
      - checkout
      - run: systeminfo

  xlarge_windows:
    machine:
      image: windows-default
    resource_class: windows.xlarge
    steps:
      - checkout
      - run: systeminfo

  large2x_windows:
    machine:
      image: windows-default
    resource_class: windows.2xlarge
    steps:
      - checkout
      - run: systeminfo


  # arm jobs
  medium_arm:
    machine:
      image: arm-default
    resource_class: arm.medium
    steps:
      - run:
          <<: *include_proxy_env      
      - run:
          <<: *basic_docker_build
      - run: |
          echo $SLEEP
          hostname
          date
          sleep $SLEEP
          date
          echo 'Done sleeping.'
    environment:
      SLEEP: 1

  large_arm:
    machine:
      image: arm-default
    resource_class: arm.large
    steps:
      - run:
          <<: *basic_docker_build
      - run: |
          echo $SLEEP
          date
          sleep $SLEEP
          date
          echo 'Done sleeping.'
    environment:
      SLEEP: 1

  # vm jobs
  remote_docker:
    <<: *remote_docker_defaults
    steps:
      - run: apk update && apk add sudo
      - run: which docker
      - run: docker -v
      - run: hostname
      - setup_remote_docker
      - run:
          <<: *include_proxy_env      
      - run:
          <<: *basic_docker_build
      - run: docker version

  docker_layer_caching:
    <<: *remote_docker_defaults
    steps:
      - run: apk update && apk add sudo    
      - run: which docker
      - run: docker -v
      - run: hostname
      - setup_remote_docker:
          docker_layer_caching: true
      - run:
          <<: *include_proxy_env          
      - run:
          <<: *basic_docker_build
      - run: docker version

  machine_dlc:
    machine:
      docker_layer_caching: true
    steps:
      - run: which docker
      - run: docker -v
      - run: hostname
      - run:
          <<: *include_proxy_env      
      - run:
          <<: *basic_docker_build
      - run: docker version


          
## ========================================================================
##                WORKFLOW
## ========================================================================
workflows:
  version: 2

  vm_jobs:
    jobs:
      - remote_docker
      - docker_layer_caching
      - machine_dlc

  linux_jobs:
    jobs:
      - medium_linux
      # - large_linux
      # - xlarge_linux
      # - 2xlarge_linux

  windows_jobs:
    jobs:
      - medium_windows
      # - large_windows
      # - xlarge_windows
      # - 2xlarge_windows

  arm_jobs:
    jobs:
      - check_if_ec2
      - medium_arm:
          requires:
            - check_if_ec2
      # - large_arm:
      #     requires:
      #       - check_if_ec2

